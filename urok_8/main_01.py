                                            # Классы

# В ООП вы создаете классы, описывающие реально существующие предметы и ситуауии, а затем создаете ОБЬЕКТЫ на основе этих описаний. При написании класса определяется общее поведение для целой категории обьектов.

# Когда вы создаете обьект на базе этих классов, каждый обьект автоматически наделяется общим поведением.

# Создание обьекта на основе класса называется СОЗДАНИЕМ ЭКЗЕМПЛЯРА. Таким образом вы работаете с экземпляром класса.

# Создание класса
class Dog():                        # Определили класс с именем Dog
    '''Простая модель собаки'''

    def __init__(self, name, age):
        '''Инициализирует атрибуты name, age'''
        self.name = name
        self.age = age

    def sit(self):
        '''Собака садится по команде'''
        print(f'{self.name} сидеть!')

    def roll_over(self):
        '''Собака перекатывается по команде'''
        print(f'{self.name} сделай перекат')

# Метод __init__() 
# Функции явл. частью класса, называются методами.
# Метод __init__() - специальный метод который автоматически выполняется ппри создании каждого экземпляра на базе класса Dog. Параметр self явл. обязательным. При каждом вызову метода, связанноого с классом, автоматически передается self - ссылка на экземпляр, она предоставляет конкретному экземпляру доступ к атрибутам и методам класса

# Любая переменная с префиксом self доступна для каждого метода в классе, и также можно обращатся к этим переменным в каждом эземпляре, созданном на основе класса.


# Создание экземпляра класса
# Класс - это инструкция по созданию экземпляров.


my_dog = Dog('шарик', 5)

# Обращение к отрибутам через точеную
print(f'Кличка моей собаки {my_dog.name}')
print(f'Возраст моей собаки {my_dog.age}')
# Создаем экземпляр собаки с кличкой и возрастом. В процессе обработки Питон Вызывает метод __init__(). Метод __init__() создает экземпляр, представляюший конкретную собаку, и присвайвает его атрибутам name и age переданые значения


# Вызов метода
my_dog.sit()
my_dog.roll_over()


# Создание нескольких экземпляров
my_dog = Dog('шарик', 5)
your_dog = Dog('лея', 6)

print(f'Кличка моей собаки {my_dog.name}')
print(f'Возраст моей собаки {my_dog.age}')
my_dog.sit()

print(f'\nКличка моей собаки {your_dog.name}')
print(f'Возраст моей собаки {your_dog.age}')
your_dog.sit()